[project]
name = "openllm_func_call_synthesizer"
version = "0.1.0"
description = "A tool for generating synthetic function call datasets for Large Language Models (LLMs)."
readme = "README.md"
authors = [
  {name = "Loong Ma", email = "diqiuzhuanzhuan@gmail.com"}
]
maintainers = [
  {name = "Loong Ma", email = "diqiuzhuanzhuan@gmail.com"}
]
classifiers = [
    # TODO
]
license = {text = "MIT"}
dependencies = [
  "bespokelabs-curator>=0.1.26",
  "datasets>=3.6.0",
  "hydra-core>=1.3.2",
  "litellm>=1.61.3",
  "pytest>=8.4.1",
  "rich>=13.9.4",
  "tenacity>=9.1.2",
  "typer",
]
requires-python = ">= 3.10"

[project.optional-dependencies]
test = [
    "coverage",  # testing
    "pytest",  # testing
    "ruff",  # linting
    "ty", # checking types
    "ipdb", # debugging
]

[project.urls]
bugs = "https://github.com/diqiuzhuanzhuan/openllm_func_call_synthesizer/issues"
changelog = "https://github.com/diqiuzhuanzhuan/openllm_func_call_synthesizer/blob/master/changelog.md"
homepage = "https://github.com/diqiuzhuanzhuan/openllm_func_call_synthesizer"

[project.scripts]
openllm_func_call_synthesizer = "openllm_func_call_synthesizer.cli:app"

[tool.ty]
# All rules are enabled as "error" by default; no need to specify unless overriding.
# Example override: relax a rule for the entire project (uncomment if needed).
# rules.TY015 = "warn"  # For invalid-argument-type, warn instead of error.

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # Pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
]

[tool.uv]
package = true

[tool.uv.pip]
index-url = "https://pypi.tuna.tsinghua.edu.cn/simple"
extra-index-url = ["https://pypi.org/simple"]
